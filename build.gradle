plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.SrpingBoot'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //jpa
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' //thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok' //lombok
	runtimeOnly 'com.mysql:mysql-connector-j' //MySQL
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8' //oracle
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.1.1'
	//.env를 위한 의존성
	implementation 'io.github.cdimascio:java-dotenv:5.2.1'
	//JSON 사용을 위한 jackson 의존성 추가
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	//응답값을 JSON 형식으로 받기 때문에 parsing을 위한 json-simple 라이브러리 빌드
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
